Deadlock is when a process owns a lock on another process that owns a lock on the original process. To detect deadlock, we checked each process that owned a lock. We would check if that lock was on a process that also owned a lock. If that lock was on the original process, that meant deadlock. If not, there was no deadlock.

We created 5% Priority 0 process, 80% Priority 1, 10% Priority 2, and 5% Priority 3 by partitioning all of the generated processes. Specifically, when creating a process, we made it choose a random number between 1 and 100 inclusive. If the number was between 1 and 5 (5 out of 100 values, or 5%), it was assigned Priority 0. If it was between 6 and 85 (80 out of 100 values, or 80%), it was assigned Priority 1. If it was between 86 and 95, it was assigned Priority 2. Finally, the remaining 5%, 96-100, was assigned Priority 3.
